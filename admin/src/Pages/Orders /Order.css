
import React, { useContext, useEffect, useState } from "react";

import "./MyOrders.css";

import { StoreContext } from "../../Context/StoreContext";

import axios from "axios";

import { assets } from "../../assets/assets";
 
const MyOrders = () => {

  const { url, token } = useContext(StoreContext);

  const [data, setData] = useState([]);

  const [budget, setBudget] = useState(5000); // Initial budget
 
  const fetchOrders = async () => {

    const response = await axios.post(

      url + "/api/order/userorders",

      {},

      { headers: { token } }

    );

    setData(response.data.data);

  };
 
  useEffect(() => {

    if (token) {

      fetchOrders();

    }

  }, [token]);
 
  /*************CALCULATE BUDGET AFTER EACH TRANSACTION*************/

  useEffect(() => {

    const totalAmount = data.reduce((acc, order) => acc + order.amount, 0);

    setBudget(5000 - totalAmount);

  }, [data]);
 
  return (

    <div className="my-orders">

      <div className="user-info">

        <div className="budget-info">

          <p>

            <b>Initial Budget:</b> $5000

          </p>

          <p>

            <b>Current Budget:</b> ${budget}

          </p>

        </div>

      </div>

      <h2>My Orders</h2>

      <div className="container">

        {data.map((order, index) => {

          return (

            <div className="my-orders-order" key={index}>

              <img src={assets.parcel_icon} alt="" />

              <p>

                {order.items.map((item, index) => {

                  if (index === order.items.length - 1) {

                    return item.name + " x " + item.quantity;

                  } else {

                    return item.name + " x " + item.quantity + ", ";

                  }

                })}

              </p>

              <p>${order.amount}.00</p>

              <p>Items: {order.items.length}</p>

              <p>

                <span>&#x25cf; </span>

                <b>{order.status}</b>

              </p>

              <button onClick={fetchOrders}>Track Order</button>

            </div>

          );

        })}

      </div>

    </div>

  );

};
 
export default MyOrders;
[10:38 PM] Hazem Zainhom Abdel-alim Abdel-mawgood 2000168
.my-orders {

  margin: 50px 0px;

}
 
.my-orders .container {

  display: flex;

  flex-direction: column;

  gap: 20px;

  margin-top: 30px;

}
 
.my-orders-order {

  display: grid;

  grid-template-columns: 0.5fr 2fr 1fr 1fr 2fr 1fr;

  align-items: center;

  gap: 30px;

  font-size: 14px;

  padding: 10px 20px;

  color: #454545;

  border: 1px solid #e67e22;

}
 
.my-orders-order img {

  width: 50px;

}
 
.my-orders-order p span {

  color: #e67e22;

}
 
.my-orders-order p b {

  font-weight: 500;

  color: #454545;

}
 
.my-orders-order button {

  border: none;

  padding: 12px 0px;

  border-radius: 4px;

  background-color: #ffe1e1;

  cursor: pointer;

  color: #454545;

}
 
.budget-info {

  display: flex;

  gap: 20px;

  font-size: 24px;

  margin-top: 10px;

  margin-bottom: 32px;

}
 
.user-name {

  font-size: 24px;

  margin-bottom: 12px;

}
 
@media (max-width: 900px) {

  .my-orders-order {

    grid-template-columns: 1fr 2fr 1fr;

    row-gap: 5px;

    font-size: 12px;

  }

  .my-orders-order button {

    font-size: 10px;

  }

}
[10:41 PM] Hazem Zainhom Abdel-alim Abdel-mawgood 2000168
import React from "react";

import "./Orders.css";

import { useState, useEffect } from "react";

import axios from "axios";

import { toast } from "react-toastify";

import { assets } from "../../assets/assets";
 
const Orders = ({ url }) => {

  const [orders, setOrders] = useState([]);
 
  const fetchAllOrders = async () => {

    try {

      const response = await axios.get(url + "/api/order/list");

      if (response.data.success) {

        setOrders(response.data.data);

        console.log(response.data.data);

      } else {

        toast.error("Error");

      }

    } catch (error) {

      console.error("Error fetching orders:", error);

      toast.error("Error fetching orders");

    }

  };
 
  const statusHandler = async (event, orderId) => {

    const response = await axios.post(url + "/api/order/status", {

      orderId,

      status: event.target.value,

    });

    if (response.data.success) {

      await fetchAllOrders();

    }

  };
 
  useEffect(() => {

    fetchAllOrders();

  }, []);
 
  return (

    <div className="order add">

      <h3>Order Page</h3>

      <div className="order-list">

        {orders.map((order, index) => (

          <div className="order-item" key={index}>

            <img src={assets.parcel_icon} alt="" />

            <div>

              <p className="order-item-food">

                {order.items.map((item, index) => {

                  if (index === order.items.length - 1) {

                    return item.name + " x " + item.quantity;

                  } else {

                    return item.name + " x " + item.quantity + ", ";

                  }

                })}

              </p>

              <p className="order-item-name">

                {order.address.firstName + " " + order.address.lastName}

              </p>

              <div className="order-item-address">

                <p>{order.address.street + ","}</p>

                <p>

                  {order.address.area +

                    ", " +

                    order.address.city +

                    ", " +

                    order.address.country +

                    ", " +

                    order.address.zipCode}

                </p>

              </div>

              <p className="order-item-phone">{order.address.phone}</p>

            </div>

            <p>Items: {order.items.length}</p>

            <p>$ {order.amount}</p>

            <select

              onChange={(event) => statusHandler(event, order._id)}

              value={order.status}

            >

              <option value="Food Processing">Food Processing</option>

              <option value="Out for delivery">Out for delivery</option>

              <option value="Delivered">Delivered</option>

            </select>

          </div>

        ))}

      </div>

    </div>

  );

};
 
export default Orders;
[10:42 PM] Hazem Zainhom Abdel-alim Abdel-mawgood 2000168
.order-item {

  display: grid;

  grid-template-columns: 0.5fr 2fr 1fr 1fr 1fr;

  align-items: start;

  gap: 30px;

  border: 1px solid #e67e22;

  padding: 20px;

  margin: 30px 0px;

  font-size: 14px;

  color: #505050;

}
 
.order-item-food,

.order-item-name {

  font-weight: 600;

}
 
.order-item-name {

  margin-top: 30px;

  margin-bottom: 5px;

}
 
.order-item-address {

  margin-bottom: 10px;

}
 
.order-item select {

  background-color: #ffe8e4;

  border: 1px solid #e67e22;

  width: max(10vw, 120px);

  padding: 10px;

  outline: none;

}
 
@media (max-width: 1000px) {

  .order-item {

    font-size: 12px;

    grid-template-columns: 0.5fr 2fr 1fr;

    padding: 15px 8px;

  }
 
  .order-item select {

    padding: 5px;

    font-size: 12px;

  }

  .order-item img {

    width: 40px;

  }

}
[10:43 PM] Hazem Zainhom Abdel-alim Abdel-mawgood 2000168
.order-item {

  display: grid;

  grid-template-columns: 0.5fr 2fr 1fr 1fr 1fr;

  align-items: start;

  gap: 30px;

  border: 1px solid #e67e22;

  padding: 20px;

  margin: 30px 0px;

  font-size: 14px;

  color: #505050;

}
 
.order-item-food,

.order-item-name {

  font-weight: 600;

}
 
.order-item-name {

  margin-top: 30px;

  margin-bottom: 5px;

}
 
.order-item-address {

  margin-bottom: 10px;

}
 
.order-item select {

  background-color: #ffe8e4;

  border: 1px solid #e67e22;

  width: max(10vw, 120px);

  padding: 10px;

  outline: none;

}
 
@media (max-width: 1000px) {

  .order-item {

    font-size: 12px;

    grid-template-columns: 0.5fr 2fr 1fr;

    padding: 15px 8px;

  }
 
  .order-item select {

    padding: 5px;

    font-size: 12px;

  }

  .order-item img {

    width: 40px;

  }

}
